{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "company": {
      "type": "string",
      "maxLength": 4
    },
    "department": {
      "type": "string",
      "maxLength": 4
    },
    "user_name": {
      "type": "string",
      "maxLength": 6
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "sqlAdministratorLogin": {
      "type": "string",
      "defaultValue": "sqldwuser"
    },
    "sqlAdministratorLoginPassword": {
      "type": "secureString",
      "defaultValue": "P@ssw0rd"
    }
  },
  "variables": {
    "base_name": "[concat(parameters('company'),'-',parameters('department'),'-bws-',parameters('user_name'))]",
    "synapse_name": "[concat(variables('base_name'),'-syn')]",
    "adls_name": "[replace(toLower(concat(variables('base_name'),'-adls')),'-','')]",
    "defaultDataLakeStorageAccountUrl": "[concat('https://', variables('adls_name'), '.dfs.core.windows.net')]",
    "storageBlobDataContributorRoleID": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
    "filesystem_name": "datalake",
    "sql_pool": "sql_pool",
    "spark_pool": "sparkpool"
  },
  "resources": [
    {
      "apiVersion": "2019-06-01-preview",
      "name": "[variables('synapse_name')]",
      "location": "[parameters('location')]",
      "type": "Microsoft.Synapse/workspaces",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "defaultDataLakeStorage": {
          "accountUrl": "[variables('defaultDataLakeStorageAccountUrl')]",
          "filesystem": "[variables('filesystem_name')]"
        },
        "sqlAdministratorLogin": "[parameters('sqlAdministratorLogin')]",
        "sqlAdministratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]"
      },
      "resources": [
        {
          "condition": true,
          "apiVersion": "2019-06-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Synapse/workspaces/', variables('synapse_name'))]"
          ],
          "location": "[parameters('location')]",
          "name": "allowAll",
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "255.255.255.255"
          },
          "type": "firewallrules"
        },
        {
          "apiVersion": "2019-06-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Synapse/workspaces/', variables('synapse_name'))]"
          ],
          "location": "[parameters('location')]",
          "name": "default",
          "properties": {
            "grantSqlControlToManagedIdentity": {
              "desiredState": "Enabled"
            }
          },
          "type": "managedIdentitySqlControlSettings"
        }
      ],
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('adls_name'))]"
      ],
      "tags": {}
    },
    {
      "condition": true,
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('adls_name')]",
      "apiVersion": "2019-06-01",
      "location": "[parameters('location')]",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "isHnsEnabled": true
      },
      "sku": {
        "name": "Standard_RAGRS"
      },
      "kind": "StorageV2",
      "tags": {},
      "resources": [
        {
          "condition": true,
          "name": "[concat('default/', variables('filesystem_name'))]",
          "type": "blobServices/containers",
          "apiVersion": "2019-06-01",
          "properties": {
            "publicAccess": "None"
          },
          "dependsOn": [
            "[concat('Microsoft.Storage/storageAccounts/', variables('adls_name'))]"
          ]
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
      "apiVersion": "2018-09-01-preview",
      "name": "[concat(variables('adls_name'), '/Microsoft.Authorization/',  guid(concat(resourceGroup().id, '/', variables('storageBlobDataContributorRoleID'), '/', variables('synapse_name'), '/',parameters('user_name'))))]",
      "location": "[parameters('location')]",
      "dependsOn": [
                "[concat('Microsoft.Synapse/workspaces/', variables('synapse_name'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('adls_name'))]"
      ],
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('storageBlobDataContributorRoleID'))]",
        "principalId": "[reference(concat('Microsoft.Synapse/workspaces/', variables('synapse_name')), '2019-06-01-preview', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal"
      }
    },
    {
      "condition": true,
      "type": "Microsoft.Synapse/workspaces/sqlPools",
      "apiVersion": "2019-06-01-preview",
      "location": "[parameters('location')]",
      "tags": {},
      "name": "[concat(variables('synapse_name'), '/', variables('sql_pool'))]",
      "sku": {
        "name": "DW100c"
      },
      "properties": {
        "createMode": "Default",
        "collation": "SQL_Latin1_General_CP1_CI_AS"
      },
      "dependsOn": [
        "[concat('Microsoft.Synapse/workspaces/', variables('synapse_name'))]"
      ]
    },
    {
      "condition": true,
      "type": "Microsoft.Synapse/workspaces/bigDataPools",
      "apiVersion": "2019-06-01-preview",
      "name": "[concat(variables('synapse_name'), '/', variables('spark_pool'))]",
      "location": "[parameters('location')]",
      "tags": {},
      "properties": {
        "nodeCount": 10,
        "isComputeIsolationEnabled": false,
        "nodeSizeFamily": "MemoryOptimized",
        "nodeSize": "small",
        "autoScale": {
          "enabled": false,
          "minNodeCount": 3,
          "maxNodeCount": 3
        },
        "autoPause": {
          "enabled": true,
          "delayInMinutes": 15
        },
        "sparkVersion": "2.4",
        "libraryRequirements": {
          "filename": "",
          "content": ""
        },
        "sessionLevelPackagesEnabled": false,
        "sparkConfigProperties": {
          "filename": "",
          "content": ""
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Synapse/workspaces/', variables('synapse_name'))]"
      ]
    }
  ],
  "outputs": {}
}